peopleconnectApp.factory('ToolsApi', ['$window', '$rootScope', '$http',
    function (win, $rootScope, $http) {
        var _api = {},
            root = "/webdataapi/dashboard/";

        /* Available Endpoints */
        var routes = {
            getMyTools: "GetMyTools",
            getAllTools: "GetAllTools",
            deleteTool: "DeleteTool",
            renameToolGroup: "RenameToolGroup",
            addNewGroup: "AddNewGroup",
            addNewTool: "AddMyTools",
            addTooltoGroup: "AddMyGroupTools",
            getToolCategories: "GetToolsCategories",
            saveOrder: "MoveTool",
            requestTool: "RequestTool"
        }
        /*

        var data = {
            userTableAutogeneratedId : '1'
        }

        data.autoGeneratedId = "";
        data.groupName = "";
        groupAutoGeneratedId: "";
        */

        //

        _api.POST_saveReorder = function (params, t_arr) {


            jsonData = JSON.stringify(t_arr);

            //            console.log('daniel', jsonData);


            
            return $http({
                method: 'POST',
                url: root + routes.saveOrder,
                data: jsonData,
                params: params,
                headers: { 'Content-Type': 'application/json' }
            })
        }
        
        _api.POST_requestTool = function (params, data) {
            var paramData = { userTableAutogeneratedId: params };

            return $http({
                method: 'POST',
                url: root + routes.requestTool,
                data: data,
                params: paramData,
                headers: { 'Content-Type': 'application/json' }
            })

        }

        /*
        * Get Categories
        */
        _api.GET_toolCategories = function (params) {
            return $http({
                method: 'GET',
                url: root + routes.getToolCategories,
                params : params,
                headers: { 'Content-Type': 'application/x-wwww-form-urlencoded' }
            })
        }

        /*
        * Get all Tools
        */
        _api.GET_alltools = function (params) {
            return $http({
                method: 'GET',
                url: root + routes.getAllTools,
                params : params,
                headers: { 'Content-Type': 'application/x-wwww-form-urlencoded' }
            })
        }

        _api.DELETE_tool = function (params) {
            return $http({
                method: 'POST',
                url: root + routes.deleteTool,
                params : params,
                headers: { 'Content-Type': 'application/json' }
            })
        }

        _api.DELETE_toolGroup = function (params) {
            return $http({
                method: 'POST',
                url: root + routes.deleteTool,
                params: params,
                headers: { 'Content-Type': 'application/json' }
            })
        }

        
        
        /*
        * Get Tools that belong to a user
        */
        _api.GET_mytools = function (params) {
            return $http({
                method: 'GET',
                url: root + routes.getMyTools,
                params : params,
                headers: { 'Content-Type' : 'application/x-wwww-form-urlencoded' }
            })
        }

        
        /*
        * Save tools to a users profile
        */
        _api.POST_savetools = function (tools, params) {

            jsonData = JSON.stringify(tools);

            return $http({
                method: 'POST',
                url: root + routes.addNewTool,
                params: params,
                data: jsonData,
                headers: { 'Content-Type': 'application/json' }
            })
        }
    

        /*
        * Save new group to a users profile
        */
        _api.POST_saveGroup = function ( params ) {
            return $http({
                method: 'GET',
                url: root + routes.addNewGroup,
                params: params,
                headers: { 'Content-Type': 'application/json' }
            })
        }

        /*
        * Get Tools that belong to a user
        */
        _api.GET_renameGroup = function (params) {

            console.log(params);
            return $http({
                method: 'GET',
                url: root + routes.renameToolGroup,
                params: params,
                headers: { 'Content-Type': 'application/x-wwww-form-urlencoded' }
            })
        }

        /*
        * Save tools to existing group on users profile
        */
        _api.POST_saveToolsToGroup = function (params, tools_arr) {
            
            jsonData = JSON.stringify(tools_arr);

            return $http({
                method: 'POST',
                url: root + routes.addTooltoGroup,
                data: jsonData,
                params : params,
                headers: { 'Content-Type': 'application/json' }
            })
        }




        return _api;
}]);




/**

1.	Get my tools – (GET)
  /webdataapi/Dashboard/GetMyTools?userTableAutogeneratedId=1

2.	Get All tools –  (GET)
  /webdataapi/Dashboard/GetAllTools?userTableAutogeneratedId=1&keyword=gmail&categoryId={29CB4AE1-9B8F-4800-A0F5-A2D3BCFF429A}

***** 
3.	Move the tool –  (GET)

 what exactly is this call for. the FE is handling this but we can save after each move if you want.
/webdataapi/Dashboard/MoveTool?userTableAutogeneratedId=1&draggedAutoGeneratedId=19&draggedSortOrder=6&droppedAutoGeneratedId=20&droppedSortOrder=5

****** needs to be graceful if tool doesnt exist so I can respond on UI
4.	Delete the tool –  (GET)
/webdataapi/Dashboard/DeleteTool?userTableAutogeneratedId=1&autoGeneratedId=4

5.	Renaming the tool group name – (GET)
/webdataapi/Dashboard/RenameToolGroup?userTableAutogeneratedId=1&autoGeneratedId=7&newGroupName=abhinay

6.	Adding the new group – (GET)
/webdataapi/Dashboard/AddNewGroup?userTableAutogeneratedId=1&groupName=abcd


****** should not accept empty call
7.	Adding my tools – (POST)
/webdataapi/Dashboard/AddMyTools?userTableAutogeneratedId=1

              Headers is   –     [{"key":"Content-Type","value":"application/json","description":""}]
              
              Post body is –   [{"ToolSitecoreID": "{AD224884-52BE-4D4A-8F21-BC4E23229B48}"},
              {"ToolSitecoreID": "{9C93F831-01F8-43E5-9F85-8FACD91CD0E7}"},
              {"ToolSitecoreID": "{B66D299B-07CF-4E18-9E55-5F72FE2A759C}"}]

8.	Adding my group tools – (POST)
/webdataapi/Dashboard/AddMyGroupTools?userTableAutogeneratedId=1&groupAutoGeneratedId=12

              Headers is   –     [{"key":"Content-Type","value":"application/json","description":""}]
              
              Post body is –   [
              {"ToolSitecoreID": "{AD224884-52BE-4D4A-8F21-BC4E23229B48}"},
              {"ToolSitecoreID": "{9C93F831-01F8-43E5-9F85-8FACD91CD0E7}"},
              {"ToolSitecoreID": "{B66D299B-07CF-4E18-9E55-5F72FE2A759C}"}
              ]




*/