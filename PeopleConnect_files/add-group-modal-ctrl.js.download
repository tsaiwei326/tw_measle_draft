var addGroupController = angular.module('addGroupController', ['ui.bootstrap']);
addGroupController.controller('addGroupCtrl', function ($uibModalInstance, ToolsService, Alertify, $uibModal, $document, group, user) {
	var $ctrl = this;

	/** STATES
    ============================================= */
	$ctrl.addToolsActive = false;
	$ctrl.groupName = '';
	$ctrl.groupId = '';
	$ctrl.groupTools = [];
	$ctrl.isNewGroup = false;
	$ctrl.isUpdatedGroup = false;
	$ctrl.inOpenState = false;
	$ctrl.isEditInputMode = false;
	$ctrl.isEditMode = false;
    $ctrl.showLabel = false;
    $ctrl.showError = false;

	if (group) {
	    $ctrl.isNewGroup = false;
	    $ctrl.showLabel = true;
		$ctrl.inOpenState = true;
		$ctrl.addToolsActive = true;
		$ctrl.groupName = group.Name;
		$ctrl.groupId = group.Id;
		$ctrl.groupTools = group.ToolItemListInGroup;
        
		window.setTimeout(function () {
		    angular.element($document[0].querySelector('.add-group-input').style.color = "#ccc")
		    angular.element($document[0].querySelector('.add-group-input').setAttribute("disabled", ""));
        }, 500)
		
	} else {
	    $ctrl.showLabel = false;
	}
    
	
	self.user = user;

	$ctrl.renameGroup = function () {

		var data = {
			userTableAutogeneratedId: self.user.id,
			autoGeneratedId: $ctrl.groupId,
			newGroupName: $ctrl.groupName
		};

		ToolsService.renameToolGroup(data)
            .then(function (response) {
                console.log(response);
                Alertify.success(response.data);
            }).catch(function (error) {
                console.log(error);
                Alertify.error(error.data.ExceptionMessage);
            });

		$ctrl.isUpdatedGroup = true;
	};

	$ctrl.saveGroup = function (shouldToggleList) {

		var data = {
			userTableAutogeneratedId: self.user.id,
            groupName: $ctrl.groupName
            
        };

        if (!$ctrl.groupName) {
            $ctrl.showError = true;
            return;
        }

		ToolsService.saveGroup(data).then(function (response) {
			$ctrl.groupId = response.data;
			$ctrl.isNewGroup = true;
			var msg = "Successfully created New Group: " + $ctrl.groupName;
			Alertify.success(msg);

			if (shouldToggleList) {
				$ctrl.addToolsActive = true;
			}

			$ctrl.inOpenState = true;
			$ctrl.isUpdatedGroup = true;

			
			angular.element($document[0].querySelector('.add-group-input').style.color = "#ccc")
			angular.element($document[0].querySelector('.add-group-input').setAttribute("disabled", ""));

			$ctrl.showLabel = true;

		}).catch(function (response) {

		    Alertify.error(response.data.ExceptionMessage);
		});
	};

	$ctrl.addTool = function (parentSelector) {

		var parentElem = parentSelector ? angular.element($document[0].querySelector('.modal-demo ' + parentSelector)) : undefined;
		var modalInstance = $uibModal.open({
			animation: self.animationsEnabled,
			ariaLabelledBy: 'modal-title',
			ariaDescribedBy: 'modal-body',
			templateUrl: 'addTool.html',
			controller: 'addToolsCtrl',
			controllerAs: '$ctrl',
			size: 'large',
			appendTo: parentElem,
			resolve: {
				user: function () {
					return self.user;
				},
			    groupId: function () {
			        return $ctrl.groupId;
		        }
			}
		});


		modalInstance.result.then(function (data) {
		    

		    var parameters = {
		        userTableAutogeneratedId: self.user.id,
		        groupAutoGeneratedId: $ctrl.groupId
		    };

			var addedToolJson = data.selected;
			var addedToolsArr = data.tools;

			ToolsService.saveToolsToGroup(parameters, addedToolJson)
            .then(function (response) {                

                $ctrl.isUpdatedGroup = true;

                addedToolsArr.forEach(function (item, index) {
                    for (var key in item) {
                        if (item.hasOwnProperty(key)) {                            
                            if (item[key] === 0 && key === 'Id') {   
                                item[key] = response.data[index].Id;                                
                            }
                        }
                    }
                })

                _.each(addedToolsArr, function (val, key) {
            		$ctrl.groupTools.push(val);
                });

            }).catch(function (response) {
            	console.log(response);
            });
		}, function () {
			// chain anything you want here
		});
	};

	$ctrl.remove = function (tool) {

	    let index = $ctrl.groupTools.indexOf(tool);

	    if (index != -1) {
	        $ctrl.groupTools.splice(index, 1);
	    }

	    var data = {
	        userTableAutogeneratedId: self.user.id,
	        autoGeneratedId: tool.Id
	    };

	    ToolsService.deleteToolFromGroup(data).then(function (response) {
	        console.log(response);
	    })
        .catch(function () {
            //
        });
	}

	$ctrl.cancel = function () {

		var group = {
			Icon: null,
			Keywords: null,
			Link: null,
			Image: null,
			IsSelected: false,
			IsToolGroup: true,
			SortOrder: $ctrl.groupTools.length,
			Name: $ctrl.groupName,
			Id: $ctrl.groupId,
			ToolItemListInGroup: $ctrl.groupTools
		};

		var data = {
			isUpdated: $ctrl.isUpdatedGroup,
			isNew: $ctrl.isNewGroup,
			group: group
		};

		$uibModalInstance.close(data);
	};

	$ctrl.toggleEditMode = function (parentSelector) {
        $ctrl.isEditMode = !$ctrl.isEditMode;
        
	};

	$ctrl.toggleInput = function (parentSelector) {

	    if ($ctrl.isEditMode) {

	        $ctrl.toggleEditMode();

	        return;
	    }

	    $ctrl.isEditInputMode = !$ctrl.isEditInputMode;
	    $ctrl.showLabel = !$ctrl.showLabel;

	    if ($ctrl.isEditInputMode) {
	        
	        angular.element($document[0].querySelector('.add-group-input').style.color="#555")
	        angular.element($document[0].querySelector('.add-group-input').removeAttribute("disabled"))
	    }
	    else {
	        $ctrl.renameGroup();
	        angular.element($document[0].querySelector('.add-group-input').style.color = "#ccc")
	        angular.element($document[0].querySelector('.add-group-input').setAttribute("disabled", "true"))
	    }

	    
	};
});