var addToolsController = angular.module('addToolsController', ['ui.bootstrap']);
addToolsController.controller('addToolsCtrl', function ($scope, $uibModalInstance, ToolsService, user, groupId) {
	var $ctrl = this;
	var self = $scope;

	$ctrl.removeOverflow = false;
	$ctrl.isLoading = true;
	$ctrl.showRequest = false;
	$ctrl.showConfirm = false;
	$ctrl.formContents = false;
	
	$ctrl.selectedTools = {};
	$ctrl.tools = [];
	$ctrl.toolCategories = [];

	self.user = user;

	var searchGroup = false;
	if (groupId)
	{
	    searchGroup = true;
	}

	var data = {
	    userTableAutogeneratedId: self.user.id,
	    groupId: groupId,
	    searchInGroup: searchGroup
	};

	ToolsService.getAllTools(data).then(function (response) {
		$ctrl.tools = response.data;

		_.each($ctrl.tools, function (tool) {
			if (tool.IsSelected) {
				$ctrl.selectedTools[tool.ToolSitecoreID] = true;
			}
		});
	}).catch(function (err) {
		console.log(err);
	}).finally(function () {
		$ctrl.isLoading = false;
	});

	ToolsService.getToolCategories(data).then(function (response) {
		console.log(response);
		$ctrl.toolCategories = response.data;
	}).catch(function (err) {
		console.log(err);
	}).finally(function () {
		$ctrl.isLoading = false;
	});


	$(document).on('change', '.tool-category-dropdown', function () {
		var guid = this.value;
		var $modal = $(this.closest('.modal-dialog'));
		var $allTools = $modal.find('.rp-checkbox .tool').closest('li');

		if (guid === "0") {
			$allTools.css('display', 'block');
			return false;
		}

		var $categoryTools = $modal.find('[data-category="' + guid + '"]').closest('li');
		$allTools.css('display', 'none');
		$categoryTools.css('display', 'block');
	});


    function isEmpty(str) {
        return !str.replace(/^\s+/g, '').length; // boolean (`true` if field is empty)
    }

    function reinitailizeFields() {
        //document.getElementById('RequestToolName').value = "";
        //document.getElementById('RequestToolDescription').value = "";
    }

	/*
    TODO : Create Endpoint
    ToolsService.getToolCategories(user).then((response) => {
        $ctrl.toolCategories = response.data;
    }).catch((err) => {
        console.log(err)
    }).finally(function () {
        $ctrl.isLoading = false;
    })

    */

	$ctrl.addTools = function () {
	    
		var ToolsArr = [];
		var addedTool = {};
		var outObj;
		var toolObjsArr = [];

		_.each($ctrl.selectedTools, function (key, val) {
			if (key) {
				var toolJson = { "ToolSitecoreID": val };

				outObj = _.filter($ctrl.tools, function (tool) {
					return tool.ToolSitecoreID == val;
				});

				if (outObj && !outObj[0].IsSelected) {
					toolObjsArr.push(outObj[0]);
				}

				ToolsArr.push(toolJson);
			}
		});

		var data = {
			tools: toolObjsArr,
			selected: ToolsArr
		};

		$uibModalInstance.close(data);
	};

	$ctrl.updateCategory = function () {
		
	};

	$ctrl.cancel = function () {
	    reinitailizeFields();
		$uibModalInstance.dismiss(false);

	};

	$ctrl.requestTool = function () {
	    $ctrl.formContents = true;
	    $ctrl.showRequest ^= true;
	    $ctrl.removeOverflow ^= true;

	    var topPos = document.getElementsByClassName('rp-List')[0].offsetTop;
	    document.getElementsByClassName('_rp_add-tools')[0].scrollTop = topPos + 10;
	}

	$ctrl.closeRequest = function () {
	    console.log($ctrl);
	    console.log(self);
	    $ctrl.showRequest ^= true;
	    $ctrl.removeOverflow ^= true;

	    $ctrl.formContents = true;
	    $ctrl.showConfirm = false;

	    reinitailizeFields();
	}

	$ctrl.submitRequest = function (e) {

	    var data = JSON.stringify({
	        "ToolName": document.getElementById('RequestToolName').value,
	        "ToolDescription": document.getElementById('RequestToolDescription').value
	    });

	    if (!isEmpty(document.getElementById('RequestToolName').value) && !isEmpty(document.getElementById('RequestToolDescription').value)) {

	        ToolsService.requestTool(self.user.id, data).then(function (response) {
	            console.log('request tool success');
	            let msg = response.data;
	            Alertify.success(msg);

	            $ctrl.formContents = false;
	            $ctrl.showConfirm = true;

	            reinitailizeFields();

	        }).catch(function (response) {
	            console.log(response);
	        });

	    }

	}
});
