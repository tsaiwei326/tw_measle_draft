var rssWidgetCtrl = angular.module('rssWidgetCtrl', ['ui.bootstrap']);

rssWidgetCtrl.controller('rssCtrl', ['$scope', '$uibModal', '$document', 'RssService', 'Alertify',
    function ($scope, $uibModal, $document, RssService, Alertify) {

    	var self = $scope;

    	self.animationsEnabled = true;
    	self.eventsFeed = [];
    	self.isRSSEmpty = false;

    	/*
        * Init
        * =================================
        */
    	self.user = {
    		id: ''
    	};

    	self.$watch(function () {
    		return self.user;
    	}, function (newVal) {
    		_loadRss();
    	});

    	self.editFeeds = function (parentSelector) {

    		if (self.user.id !== '0') {
    			self.updateFeeds(parentSelector);
    		}
    		else {
    			self.showLoginError(parentSelector);
    		}
    	};

    	self.updateFeeds = function (parentSelector) {

    		var parentElem = parentSelector ? angular.element($document[0].querySelector('.modal-demo ' + parentSelector)) : undefined;
    		var modalInstance = $uibModal.open({
    			animation: self.animationsEnabled,
    			ariaLabelledBy: 'modal-title',
    			ariaDescribedBy: 'modal-body',
    			templateUrl: 'addRssFeed.html',
    			controller: 'addRssFeedCtrl',
    			controllerAs: '$ctrl',
    			size: 'large',
    			resolve: {
    				user: function () {
    					return self.user;
    				}
    			}
    		});

    		modalInstance.result.then(function () {
    			console.log('reload feed');
    			_loadRss();
    			//  console.log(selectedTools)

    		}, function () {
    			// chain anything you want here
    		});
    	};

    	self.showLoginError = function (parentElem) {
    		var modalInstance = $uibModal.open({
    			animation: self.animationsEnabled,
    			ariaLabelledBy: 'modal-title',
    			ariaDescribedBy: 'modal-body',
    			templateUrl: 'loginError.html',
    			controller: 'loginErrCtrl',
    			controllerAs: '$ctrl',
    			size: 'large',
    		});

    		modalInstance.result.then(function () {
    			//do something after showing login err message
    		}, function () {
    			// chain anything you want here
    		});
    	};

    	function _loadRss() {

    		var data = {
    			userTableAutogeneratedId: self.user.id
    		};

    	    RssService.getCustomNewsFeed(data).then(function (response) {   	        
    	        if (!response.data.length) self.isRSSEmpty = true;
    	        else self.isRSSEmpty = false;

    	        var str = '';
    	        var newArr = [];

    	        response.data.forEach(function (item) {
    	            str = item.Summary.replace(/<(?:.|\s)*?>/g, "");
    	            str = str.replace(/&rsquo;/g, "'");
    	            str = str.replace(/&nbsp;/gi, " ");
    	            str = str.replace(/<a.*href="(.*?)".*>(.*?)<\/a>/gi, " $2 (Link->$1) ");
    	            str = str.replace(/<p.*>/gi, "")

    	            newArr.push(str);
    	        })

    	        var rssModified = _.filter(response.data, function (num, index) {
    	            return num.Summary = newArr[index];
    	        });

    	        self.rssFeed = rssModified;
    		}).catch(function (response) {
    			console.log(response);
    		});
    	}
    }
]);
